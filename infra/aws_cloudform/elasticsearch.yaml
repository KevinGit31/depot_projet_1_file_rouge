AWSTemplateFormatVersion: '2010-09-09'
Description: ElasticsearchDomain resource
Parameters:
  DomainName:
    Description: User-defined Elasticsearch domain name
    Type: String
    Default: elkqua
    AllowedValues:
      - 'elkqua'
      - 'elkprod'
  ElasticsearchVersion:
    Description: User-defined Elasticsearch version
    Type: String
    Default: '7.10'
  AvailabilityZone:
    Description: Attendue zone ex eu-west-2a / eu-central-1a
    Type: String
    Default: eu-west-2a
  CidrBlock1:
    Description: ''
    Type: String
    Default: 10.80.145.0/24
    AllowedValues:
      - '10.80.145.0/24'
      - '10.80.146.0/24'
  GroupDescription:
    Type: String
    Default: elkquagrp
    AllowedValues:
      - 'elkquagrp'
      - 'elkprodgrp'
  SGName:
    Type: String
    Description: 'The Security Group'
    Default: elkquagrpname
    AllowedValues:
      - 'elkquagrpname'
      - 'elkprodgrpname'
  InstanceType:
    Type: String
    Default: t3.small.elasticsearch
  VpcId:
    Type: String
  UserElk:
    Description: 'Elk login'
    Type: String
  PwdElk:
    Description: 'ElK password'
    NoEcho: true
    Type: String

Resources:
  ElasticsearchDomain:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      DomainName:
        Ref: DomainName
      ElasticsearchVersion:
        Ref: ElasticsearchVersion
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: '1'
        InstanceType:
          Ref: InstanceType
        ZoneAwarenessEnabled: false
      EBSOptions:
        EBSEnabled: true
        Iops: '0'
        VolumeSize: '10'
        VolumeType: 'gp2'
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            # Condition:
            #   IpAddress:
            #     aws:SourceIp:
            #       - "90.59.0.190"
            #       - "90.24.39.110"

##############EXEMPLE sur l'erreur :
# when I click the link, browser is throwing the following error.
# {"Message":"User: anonymous is not authorized to perform: es:ESHttpGet on resource: arn:aws
#SOLUTION1 possible=>
# You can setup an Access Policy with both IAM and IP-address based access. See my answer here. In short:
#     EC2 instance needs a profile with the arn:aws:iam::aws:policy/AmazonESFullAccess policy
#     Policy should include two statements: first list IAM access, second list IP access.
# Here's an example policy (statement order is important!)
# {
#   "Version": "2012-10-17",
#   "Statement": [
#     {
#       "Effect": "Allow",
#       "Principal": {
#         "AWS": "arn:aws:iam::xxxxxxxxxxxx:root"
#       },
#       "Action": "es:*",
#       "Resource": "arn:aws:es:us-west-2:xxxxxxxxxxxx:domain/my-elasticsearch-domain/*"
#     },
#     {
#       "Sid": "",
#       "Effect": "Allow",
#       "Principal": {
#         "AWS": "*"
#       },
#       "Action": "es:*",
#       "Resource": "arn:aws:es:us-west-2:xxxxxxxxxxxx:domain/my-elasticsearch-domain/*",
#       "Condition": {
#         "IpAddress": {
#           "aws:SourceIp": [
#             "192.168.1.0",
#             "192.168.1.1"
#           ]
#         }
#       }
#     }
#   ]
# }


            Resource: !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: !Ref UserElk
          MasterUserPassword: !Ref PwdElk
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
      Tags:
        - Key: Name
          Value: !Sub
          - ${AWS::StackName}-${Name}
          - { Name: !Ref DomainName }
      # VPCOptions:
      #   SubnetIds:
      #     - Ref: subnet
      #   SecurityGroupIds:
      #     - Ref: mySecurityGroup

  # subnet:
  #   Type: 'AWS::EC2::Subnet'
  #   Properties:
  #     VpcId:
  #       Ref: VpcId
  #     CidrBlock:
  #       Ref: CidrBlock1
  #     AvailabilityZone:
  #       Ref: AvailabilityZone
  # mySecurityGroup:
  #   Type: 'AWS::EC2::SecurityGroup'
  #   Properties:
  #     GroupDescription:
  #       Ref: GroupDescription
  #     VpcId:
  #       Ref: VpcId
  #     GroupName:
  #       Ref: SGName
  #     SecurityGroupIngress:
  #       - FromPort: '443'
  #         IpProtocol: tcp
  #         ToPort: '443'
  #         CidrIp: 0.0.0.0/0



Outputs:
  DomainArn:
    Value:
      'Fn::GetAtt':
        - ElasticsearchDomain
        - DomainArn
  DomainEndpoint:
    Value:
      'Fn::GetAtt':
        - ElasticsearchDomain
        - DomainEndpoint

  KibanaEndpoint:
    Value: !Sub "${ElasticsearchDomain.DomainEndpoint}/_plugin/kibana/"
  Id:
    Value: !Ref ElasticsearchDomain