pipeline {
    environment {
//        KEYNAME_ENV = "${sh(script:'echo $KEYNAME', returnStdout: true).trim()}"
//        KEYNAME_ENV = "${sh(script:'$(cat /var/lib/jenkins/.bashrc | grep KEYNAME ) && ${env.KEYNAME}', returnStdout: true).trim()}"
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "10.80.140.11:8081"
        NEXUS_REPOSITORY = "APP"
        NEXUS_CREDENTIAL_ID = "nexus"
        NEXUS_ARTIFACT_ID = "qcm"
        ROOTKEY_ENV = "NONE" //"${env.$ROOTKEY}"
        JENKINS_KEY = "NONE"
        ANSIBLE_KEY = "NONE"
        PRIVIP_ENV = "10.80.110.10" //"${env.$PRIVIP}"
        //VARIABLE A MODIFIER SUIVANT L4ENVIRONNEMENT
        ENVIRONNEMENT = "dev"
        TYPENAME_ENV = "qcmdev" //"${env.$TYPENAME}"
    }
//

agent any
    stages {
        stage('clone source') {
            steps {
                sh 'rm -rf depot_projet_1_file_rouge'
                git branch: 'dev', url: 'https://github.com/KevinGit31/depot_projet_1_file_rouge.git'
            }
        }
//        stage('test'){
//            steps {
//                sh 'sleep 15s'
//                sh 'curl http://192.168.40.11:3002'
//
//            }
//        }
        stage("Build") {
            steps {
                script {
                    sh 'tar cvfz qcm.tar.gz quizz/'
                }
            }
        }
        stage('push nexus') {
            steps{
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: "${NEXUS_ARTIFACT_ID}",
                        classifier: '',
                        file: "qcm.tar.gz",
                        type: 'tar.gz'
                        ]
                    ],
                    credentialsId: "${NEXUS_CREDENTIAL_ID}",
                    groupId: '',
                    nexusUrl: "${NEXUS_URL}",
                    nexusVersion: "${NEXUS_VERSION}",
                    protocol: "${NEXUS_PROTOCOL}",
                    repository: "${NEXUS_REPOSITORY}",
                    version: "1.0-${BUILD_NUMBER}"
            }
        }
//test du build versionnÃ©
        stage('testnexuscible'){
            steps {
                sh 'sleep 15s'
                sh "curl http://${NEXUS_URL}/repository/${NEXUS_REPOSITORY}/${NEXUS_ARTIFACT_ID}/1.0-${BUILD_NUMBER}/${NEXUS_ARTIFACT_ID}-1.0-${BUILD_NUMBER}.tar.gz"
            }
        }
//        stage('ansible'){
//            steps {
//                ansiblePlaybook(
//                playbook: "infra/ansible/${ENVIRONNEMENT}.yml",
//                inventory: "infra/ansible/inventory/${ENVIRONNEMENT}/hosts",
//                vaultCredentialsId: "${ANS_ENV}",
//                extras: "ansible_environnement=dev VpcId=${VPCID_ENV} PrivateIP=${PRIVIP_ENV} secret_devops=${env.SECRETDEVOPS_ENV} ROOTKEY=\"\" KEYNAME=${env.ROOTKEY_ENV} TypeName=${env.TYPENAME_ENV} REGION=${env.REGION1_ENV} SubnetIdPub=${env.SUBIDPUB_ENV} SubnetIdPriv=${env.SUBIDPRIV_ENV} VpcId=${env.VPCID_ENV} PrivateIP=${env.PRIVIP_ENV} IngressPort=${env.INGRPORT_ENV} SecurityGroupNameList=${env.SECGRPNLST_ENV} Urlscript=${env.USCRIPT_ENV} SecurityGroupId=${env.SECGRPID_ENV} InstanceType=${env.INSTTYPE_ENV}"
//                )
//            }
//        }

        stage('deleteEC2ansible') {
            steps {

                    sh """#!/bin/bash
                    source /var/lib/jenkins/.bashrc
                    yes | cp -rf infra/aws_cloudform/instancegrp3.yaml infra/ansible/roles/common/tasks/instancegrp3.yaml
                    echo "TypeName: ${TYPENAME_ENV}" > infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "REGION: \$REGION" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "KEYNAME: \$KEYNAME" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "ansible_environnement: ${ENVIRONNEMENT}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "RootKey: ${ROOTKEY_ENV}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "JenkinsKey: ${JENKINS_KEY}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "AnsibleKey: ${ANSIBLE_KEY}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "secret_devops: \$SECRETDEVOPS" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all

                    #MODIF ENV ICI =====>>>>>>
                    echo "SubnetIdPubADM: \$SUBIDPUBDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivADM: \$SUBIDPRIVDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    #MODIF ENV ICI <<<<<<=====

                    echo "SubnetIdPubDEV: \$SUBIDPUBDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivDEV: \$SUBIDPRIVDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPubQUA: \$SUBIDPUBQUA" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivQUA: \$SUBIDPRIVQUA" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPubPROD: \$SUBIDPUBPROD" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivPROD: \$SUBIDPRIVPROD" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "VpcId: \$VPCID" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "PrivateIP: ${PRIVIP_ENV}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "IngressPort: \$INGRPORT" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SecurityGroupNameList: \$SECGRPNLST" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "Urlscript: \$USCRIPT" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SecurityGroupId: \$SECGRPID" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "InstanceType: \$INSTTYPE" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "AWSAccessKeyId: \$AWS_ACCESS_KEY" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "AWSSecretAccessKeyId: \$AWS_SECRET_KEY" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    ansible-playbook -i infra/ansible/inventory/${ENVIRONNEMENT}/hosts infra/ansible/roles/common/tasks/cloudformation-delete.yml -vvv
                    sleep 20s
                    """
            }
        }
//A FAIRE TEST si EC2 DEL
        stage('createEC2ansible') {
            steps {
                    sh """#!/bin/bash
                    yes | cp -rf infra/aws_cloudform/instancegrp3.yaml infra/ansible/roles/common/tasks/instancegrp3.yaml
                    echo "TypeName: ${TYPENAME_ENV}" > infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "REGION: \$REGION" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "KEYNAME: \$KEYNAME" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "ansible_environnement: ${ENVIRONNEMENT}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "RootKey: ${ROOTKEY_ENV}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "JenkinsKey: ${JENKINS_KEY}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "AnsibleKey: ${ANSIBLE_KEY}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "secret_devops: \$SECRETDEVOPS" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all

                    #MODIF ENV ICI =====>>>>>>
                    echo "SubnetIdPubADM: \$SUBIDPUBDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivADM: \$SUBIDPRIVDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    #MODIF ENV ICI <<<<<<=====

                    echo "SubnetIdPubDEV: \$SUBIDPUBDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivDEV: \$SUBIDPRIVDEV" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPubQUA: \$SUBIDPUBQUA" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivQUA: \$SUBIDPRIVQUA" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPubPROD: \$SUBIDPUBPROD" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SubnetIdPrivPROD: \$SUBIDPRIVPROD" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "VpcId: \$VPCID" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "PrivateIP: ${PRIVIP_ENV}" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "IngressPort: \$INGRPORT" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SecurityGroupNameList: \$SECGRPNLST" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "Urlscript: \$USCRIPT" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "SecurityGroupId: \$SECGRPID" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "InstanceType: \$INSTTYPE" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "AWSAccessKeyId: \$AWS_ACCESS_KEY" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
                    echo "AWSSecretAccessKeyId: \$AWS_SECRET_KEY" >> infra/ansible/inventory/${ENVIRONNEMENT}/group_vars/all/all
//                    ansible-playbook -i infra/ansible/inventory/${ENVIRONNEMENT}/hosts infra/ansible/${ENVIRONNEMENT}.yml -vvv
                    ansible-playbook -i infra/ansible/inventory/${ENVIRONNEMENT}/hosts infra/ansible/roles/common/tasks/cloudformation-create.yml -vvv
                    """
            }

        }

//A FAIRE TEST si EC2 OK
    }
}

