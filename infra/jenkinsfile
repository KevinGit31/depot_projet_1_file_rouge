pipeline {
    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "10.80.140.11:8081"
        NEXUS_REPOSITORY = "APP"
        NEXUS_CREDENTIAL_ID = "nexus"
        NEXUS_ARTIFACT_ID = "qcm"
        ENVIRONNEMENT = "dev"
        SECRETDEVOPS_ENV = sh(script: 'su - userjenkins -c "echo $SECRETDEVOPS', returnStdout: true)
        ROOTKEY_ENV = sh(script: 'su - userjenkins -c "echo $ROOTKEY', returnStdout: true)
        KEYNAME_ENV = sh(script: 'su - userjenkins -c "echo $KEYNAME', returnStdout: true)
        TYPENAME_ENV = sh(script: 'su - userjenkins -c "echo $TYPENAME', returnStdout: true)
        REGION1_ENV = sh(script: 'su - userjenkins -c "echo $REGION1', returnStdout: true)
        SUBIDPUB_ENV = sh(script: 'su - userjenkins -c "echo $SUBIDPUB', returnStdout: true)
        SUBIDPRIV_ENV = sh(script: 'su - userjenkins -c "echo $SUBIDPRIV', returnStdout: true)
        VPCID_ENV = sh(script: 'su - userjenkins -c "echo $VPCID', returnStdout: true)
        PRIVIP_ENV = sh(script: 'su - userjenkins -c "echo $PRIVIP', returnStdout: true)
        INGRPORT_ENV = sh(script: 'su - userjenkins -c "echo $INGRPORT', returnStdout: true)
        SECGRPNLST_ENV = sh(script: 'su - userjenkins -c "echo $SECGRPNLST', returnStdout: true)
        USCRIPT_ENV = sh(script: 'su - userjenkins -c "echo $USCRIPT', returnStdout: true)
        SECGRPID_ENV = sh(script: 'su - userjenkins -c "echo $SECGRPID', returnStdout: true)
        INSTTYPE_ENV = sh(script: 'su - userjenkins -c "echo $INSTTYPE', returnStdout: true)
    }
//
agent any
    stages {
        stage('clone source') {
            steps {
                sh 'rm -rf depot_projet_1_file_rouge'
                git branch: 'dev', url: 'https://github.com/KevinGit31/depot_projet_1_file_rouge.git'
            }
        }
//        stage('test'){
//            steps {
//                sh 'sleep 15s'
//                sh 'curl http://192.168.40.11:3002'
//
//            }
//        }
        stage("Build") {
            steps {
                script {
                    sh 'tar cvfz qcm.tar.gz quizz/'
                }
            }
        }
        stage('push nexus') {
            steps{
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: "${NEXUS_ARTIFACT_ID}",
                        classifier: '',
                        file: "qcm.tar.gz",
                        type: 'tar.gz'
                        ]
                    ],
                    credentialsId: "${NEXUS_CREDENTIAL_ID}",
                    groupId: '',
                    nexusUrl: "${NEXUS_URL}",
                    nexusVersion: "${NEXUS_VERSION}",
                    protocol: "${NEXUS_PROTOCOL}",
                    repository: "${NEXUS_REPOSITORY}",
                    version: "1.0-${BUILD_NUMBER}"
            }
        }
//test du build versionn√©
        stage('testnexuscible'){
            steps {
                sh 'sleep 15s'
                sh "curl http://${NEXUS_URL}/repository/${NEXUS_REPOSITORY}/${NEXUS_ARTIFACT_ID}/1.0-${BUILD_NUMBER}/${NEXUS_ARTIFACT_ID}-1.0-${BUILD_NUMBER}.tar.gz"
            }
        }

        stage('deleteEC2ansible') {
            steps {
                    sh """#!/bin/bash
                    ansible-playbook -i infra/ansible/inventory/${ENVIRONNEMENT}/hosts infra/ansible/${ENVIRONNEMENT}.yml --extra-vars \"GOTODEL=yes secret_devops=${env.SECRETDEVOPS_ENV} ROOTKEY=${env.ROOTKEY_ENV} KEYNAME=${env.ROOTKEY_ENV} TypeName=${env.TYPENAME_ENV} REGION=${env.REGION1_ENV} SubnetIdPub=${env.SUBIDPUB_ENV} SubnetIdPriv=${env.SUBIDPRIV_ENV} VpcId=${env.VPCID_ENV} PrivateIP=${env.PRIVIP_ENV} IngressPort=${env.INGRPORT_ENV} SecurityGroupNameList=${env.SECGRPNLST_ENV} Urlscript=${env.USCRIPT_ENV} SecurityGroupId=${env.SECGRPID_ENV} InstanceType=${env.INSTTYPE_ENV}\" --tags \"clouddelete\"
                    """
            }
        }
//A FAIRE TEST si EC2 DEL
        stage('createEC2ansible') {
            steps {
                    sh """#!/bin/bash
                    ansible-playbook -i infra/ansible/inventory/${ENVIRONNEMENT}/hosts infra/ansible/${ENVIRONNEMENT}.yml --extra-vars \"secret_devops=${env.SECRETDEVOPS_ENV} ROOTKEY=${env.ROOTKEY_ENV} KEYNAME=${env.ROOTKEY_ENV} TypeName=${env.TYPENAME_ENV} REGION=${env.REGION1_ENV} SubnetIdPub=${env.SUBIDPUB_ENV} SubnetIdPriv=${env.SUBIDPRIV_ENV} VpcId=${env.VPCID_ENV} PrivateIP=${env.PRIVIP_ENV} IngressPort=${env.INGRPORT_ENV} SecurityGroupNameList=${env.SECGRPNLST_ENV} Urlscript=${env.USCRIPT_ENV} SecurityGroupId=${env.SECGRPID_ENV} InstanceType=${env.INSTTYPE_ENV}\"
                    """
            }

        }

//A FAIRE TEST si EC2 OK
    }
}